datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement()) // id String @default(uuid()) 
  name         String
  email        String    @unique
  password String
  polls        Poll[]    @relation("UserPolls")
  votes        Vote[]
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model Poll {
  id         Int          @id @default(autoincrement())
  question   String
  isPublished Boolean      @default(false)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  creator    User          @relation("UserPolls", fields: [creatorId], references: [id])
  creatorId  Int
  options    PollOption[] // Defines a one-to-many relationship: one Poll has many PollOptions
}

model PollOption {
  id      Int     @id @default(autoincrement())
  text    String
  poll    Poll    @relation(fields: [pollId], references: [id])
  pollId  Int
  votes   Vote[]
}

model Vote {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  pollOption  PollOption  @relation(fields: [pollOptionId], references: [id])
  pollOptionId Int

  @@unique([userId, pollOptionId]) // Prevent double voting on the same option
}
